@{
    ViewData["Title"] = "Data";
}
<h1 class="display-4">Робота з даними</h1>
<p>
    Робота з даними - забезпечення їх повного життєвого циклу CRUD.
    Основна задача - збереження даних. Для цього існує декілька підходів.
</p>
<ul>
    <li>Оперативна пам'ять</li>
    <li>Файли</li>
    <li>Бази даних</li>
</ul>
<p>
    Збереження в оперативній пам'яті. "+" висока швидкість доступу.
    "-" енергозалежність, чутливість до перезапусків. Підходить для
    оперативних даних (постійно оброблюваних), актуальність яких може
    бути відновлена.
    Особливість (для програмування) - контролери утворюють свій час
    існування протягом оброблення запиту. Відповідно, для постійного
    збереження даних контролери не підходять.
</p>
<p>
    Моделі (в ASP) - класи для передачі даних. Наявність моделей
    створює певний інтерфейс обміну, який дуже легко перетворюється
    у API. Моделі умовно поділяють на <br/>
    моделі представлення (PageModel або ViewModel) [не плутати з MVVM] -
    усі необхідні дані для формування представлення. <br />
    моделі форми (FormModel) - дані, що передаються від представлення
    до контролера. <br />
    моделі збереження (Entity) - дані, що передаються на Модель 
    (з великої літери - архітектурну частину проєкту)
</p>
<div class="row">
    <div class="col">
        <h3>RAM</h3>
        @foreach(String str in (ViewData["data"] as List<String>))
        {
            <div class="alert alert-secondary" role="alert">
                @str
            </div>
        }
    </div>
    <div class="col">
        <h3>File</h3>
    </div>
    <div class="col">
        <h3>DB</h3>
    </div>
</div>